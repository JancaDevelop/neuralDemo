{"version":3,"sources":["X:\\DP\\neuraldemo\\components\\Examples.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAA+B;AACY;AAG7B;;IAAgB;;;AAC7B,sBAAiB;AACR;;wHAAQ;;AAChB,YAAgB,eAAG,IAAc,iEAAE,GAAE,GAAI;AAC7B,qBAAiB;AAC7B,YAAe,YAAG,IAAW,kDAAe;AAC5C,YAAa,UAAY,UAAO;AAC5B,cAAM;AACC,wBAEX;AAHa;;AAKP;;;;;AACG;AAEL;;;;;;;;AAGJ;;;;;;;;;;AAAK;;;;;;;;AAAK,yBAAM,MAAW,WAAS,SAAC,CAAE,GAAU;;AACjD;;;;;;AAAK;;;;;;;;AAAK,yBAAM,MAAW,WAAS,SAAC,CAAE,GAAU;;AAC3C;;;;;;AAAK;;;;;;;;AAAK,yBAAM,MAAW,WAAS,SAAC,CAAE,GAAU;;AACjD;;;;;;AAAK;;;;;;;;AAAK,yBAAM,MAAW,WAAS,SAAC,CAAE,GAAU;;AAGvD;;;;;;;AACD;;;;;;;;;EAzB0C,gDAAmB","file":"4.f787f0e80f2673cba362.hot-update.js","sourcesContent":["import * as React from 'react';\nimport Perceptron from '../src/Perceptron';\nimport { Trainer } from 'synaptic';\n\nexport default class Examples extends React.Component<any,any> {\n\tconstructor(props) {\n    \tsuper(props);\n\t\tlet myPerceptron = new Perceptron(2,2,1);\n\t\tmyPerceptron.connectLayers();\n\t\tconst myTrainer = new Trainer(myPerceptron);\n\t\tconst trainer = myTrainer.XOR();\n\t\tthis.state = {\n\t\t\tperceptron: myPerceptron,\n\t\t};\n  }\n\n  render() {\n    return (\n\t    <div>\n\t     Examples\n\n\t\t<h1>Synaptic examples</h1>\n\t\t<div>{this.state.perceptron.activate([0,0])}</div><div></div>\n\t\t<div>{this.state.perceptron.activate([1,0])}</div><div></div>\n\t      \t<div>{this.state.perceptron.activate([0,1])}</div><div></div>\n\t      \t<div>{this.state.perceptron.activate([1,1])}</div><div></div>\n\t    </div>\n    );\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./components/Examples.tsx"],"sourceRoot":""}